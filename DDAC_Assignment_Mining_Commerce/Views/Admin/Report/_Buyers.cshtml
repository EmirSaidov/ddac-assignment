@model List<BuyerModel>

@{
    @using Newtonsoft.Json;
    Dictionary<string, int> groupByGender = new Dictionary<string, int>();
    groupByGender.Add("Male", 0);
    groupByGender.Add("Female", 0);
    groupByGender.Add("Unidentified",0);
    Model.ForEach(buyer =>
    {
        switch(buyer.user.gender) {
            case "M":
                groupByGender["Male"]++;
                break;
            case "F":
                groupByGender["Female"]++;
                break;
            case "U":
                groupByGender["Unidentified"]++;
                break;
        }
    });
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    // Load the Visualization API and the corechart package.
    google.charts.load('current', { 'packages': ['corechart'] });
    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {

        // Create the data table.
        var buyerGender = new google.visualization.DataTable();
        buyerGender.addColumn('string', 'Gender');
        buyerGender.addColumn('number', 'Count');
        var groupByGender = JSON.parse('@Html.Raw(JsonConvert.SerializeObject(groupByGender))');
        buyerGender.addRow(["Male", groupByGender["Male"]]);
        buyerGender.addRow(["Female", groupByGender["Female"]]);
        buyerGender.addRow(["Unidentified", groupByGender["Unidentified"]])

        // Set chart options
        var options = {
            'title': 'Buyer Gender Demographic',
            'width': 400,
            'height': 300
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('groupByGender'));
        chart.draw(buyerGender, options);
    }

</script>
<style>
    .scrollable {
        max-height: 40vh;
        overflow-y: scroll;
        overflow-x: hidden;
    }
</style>
<div>
    <div> <b>Total Buyer: </b> @Model.Count</div>
    <div class="d-flex justify-content-between">
        <div class="scrollable">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Buyer Name</th>
                        <th>Buyer Email</th>
                        <th>Buyer Contact</th>
                        <th>Buyer Gender</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (BuyerModel b in Model)
                    {
                    <tr>
                        <td>@b.user.fullname</td>
                        <td>@b.user.email</td>
                        <td>@b.user.phone</td>
                        <td>@b.user.gender</td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
        <div id="groupByGender"></div>
    </div>
</div>